/**
 * node-express-boilerplate API documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import AuthTokens from './model/AuthTokens';
import Backlog from './model/Backlog';
import Body from './model/Body';
import Body1 from './model/Body1';
import Body10 from './model/Body10';
import Body11 from './model/Body11';
import Body2 from './model/Body2';
import Body3 from './model/Body3';
import Body4 from './model/Body4';
import Body5 from './model/Body5';
import Body6 from './model/Body6';
import Body7 from './model/Body7';
import Body8 from './model/Body8';
import Body9 from './model/Body9';
import Error from './model/Error';
import InlineResponse200 from './model/InlineResponse200';
import InlineResponse2001 from './model/InlineResponse2001';
import InlineResponse2002 from './model/InlineResponse2002';
import InlineResponse201 from './model/InlineResponse201';
import Team from './model/Team';
import Token from './model/Token';
import User from './model/User';
import AuthApi from './api/AuthApi';
import BacklogsApi from './api/BacklogsApi';
import TeamsApi from './api/TeamsApi';
import UsersApi from './api/UsersApi';

/**
* Object.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var NodeExpressBoilerplateApiDocumentation = require('index'); // See note below*.
* var xxxSvc = new NodeExpressBoilerplateApiDocumentation.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new NodeExpressBoilerplateApiDocumentation.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new NodeExpressBoilerplateApiDocumentation.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new NodeExpressBoilerplateApiDocumentation.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.6.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AuthTokens model constructor.
     * @property {module:model/AuthTokens}
     */
    AuthTokens,

    /**
     * The Backlog model constructor.
     * @property {module:model/Backlog}
     */
    Backlog,

    /**
     * The Body model constructor.
     * @property {module:model/Body}
     */
    Body,

    /**
     * The Body1 model constructor.
     * @property {module:model/Body1}
     */
    Body1,

    /**
     * The Body10 model constructor.
     * @property {module:model/Body10}
     */
    Body10,

    /**
     * The Body11 model constructor.
     * @property {module:model/Body11}
     */
    Body11,

    /**
     * The Body2 model constructor.
     * @property {module:model/Body2}
     */
    Body2,

    /**
     * The Body3 model constructor.
     * @property {module:model/Body3}
     */
    Body3,

    /**
     * The Body4 model constructor.
     * @property {module:model/Body4}
     */
    Body4,

    /**
     * The Body5 model constructor.
     * @property {module:model/Body5}
     */
    Body5,

    /**
     * The Body6 model constructor.
     * @property {module:model/Body6}
     */
    Body6,

    /**
     * The Body7 model constructor.
     * @property {module:model/Body7}
     */
    Body7,

    /**
     * The Body8 model constructor.
     * @property {module:model/Body8}
     */
    Body8,

    /**
     * The Body9 model constructor.
     * @property {module:model/Body9}
     */
    Body9,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200,

    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001,

    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002,

    /**
     * The InlineResponse201 model constructor.
     * @property {module:model/InlineResponse201}
     */
    InlineResponse201,

    /**
     * The Team model constructor.
     * @property {module:model/Team}
     */
    Team,

    /**
     * The Token model constructor.
     * @property {module:model/Token}
     */
    Token,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
    * The AuthApi service constructor.
    * @property {module:api/AuthApi}
    */
    AuthApi,

    /**
    * The BacklogsApi service constructor.
    * @property {module:api/BacklogsApi}
    */
    BacklogsApi,

    /**
    * The TeamsApi service constructor.
    * @property {module:api/TeamsApi}
    */
    TeamsApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};
