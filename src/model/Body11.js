/**
 * Sprint Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Task from './Task';

/**
 * The Body11 model module.
 * @module model/Body11
 * @version 1.6.0
 */
class Body11 {
    /**
     * Constructs a new <code>Body11</code>.
     * @alias module:model/Body11
     * @param type {String} 
     * @param taskId {String} 
     * @param data {module:model/Task} 
     */
    constructor(type, taskId, data) { 
        
        Body11.initialize(this, type, taskId, data);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type, taskId, data) { 
        obj['type'] = type;
        obj['taskId'] = taskId;
        obj['data'] = data;
    }

    /**
     * Constructs a <code>Body11</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Body11} obj Optional instance to populate.
     * @return {module:model/Body11} The populated <code>Body11</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Body11();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('taskId')) {
                obj['taskId'] = ApiClient.convertToType(data['taskId'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = Task.constructFromObject(data['data']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} type
 */
Body11.prototype['type'] = undefined;

/**
 * @member {String} taskId
 */
Body11.prototype['taskId'] = undefined;

/**
 * @member {module:model/Task} data
 */
Body11.prototype['data'] = undefined;






export default Body11;

